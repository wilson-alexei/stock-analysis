#VBA of Wall Street 

##Overview of Project
For this project, we are helping Steve to research and expand a dataset that possibly include the whole stock market. We are given an Excel filled with different stock tickers containing information such as their daily Open and Close price, daily High and Low price, volumes traded, adjusted closing price, and the trading date.  
Now, we need to refactor the code to efficiently loop through all the data and give us the the proper result where we can see which stock is profitable or not between the year of 2017 and 2018. We are also attempting to refactor VBA codes to run through the dataset faster.  

##Results 
As we can see from the returns of the results, the 2017 stocks perform significantly better than the 2018 stocks. Almost all of 2017 stocks have a positive return except 'TERP' while the 2018 stocks are dominated with negative returns with exception of only two stocks which are 'ENPH' and 'RUN'. With high percentage of returns in 2017, we can speculate that the 2017 market was highly inflated and the bubble eventually pop in the 2018 market as the prices are adjusted back to pre-inflation.  

The purpose of refactoring code is to make the code more efficient by improving the code processes and simmplify the code for future users. Based on the trials from both codes, original and refactored, the numbers show that the execution times from refactored code are significantly faster than the original code. 

##Summary 

- What are the advantages and disadvantages of refactoring code? 



- How do these pros and cons apply to refactoring the original VBA script?




